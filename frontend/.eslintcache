[{"C:\\Users\\user\\E-Shop-main\\frontend\\src\\index.js":"1","C:\\Users\\user\\E-Shop-main\\frontend\\src\\App.js":"2","C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\screens\\ProductScreen.js":"3","C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\screens\\RegisterScreen.js":"4","C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\screens\\PlaceOrderScreen.js":"5","C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\screens\\UsersScreen.js":"6","C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\screens\\OrderListScreen.js":"7","C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\screens\\OrderScreen.js":"8","C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\screens\\Caurosel.js":"9","C:\\Users\\user\\E-Shop-main\\frontend\\src\\constants\\orderConstant.js":"10","C:\\Users\\user\\E-Shop-main\\frontend\\src\\action\\cartAction.js":"11","C:\\Users\\user\\E-Shop-main\\frontend\\src\\action\\userAction.js":"12","C:\\Users\\user\\E-Shop-main\\frontend\\src\\store.js":"13","C:\\Users\\user\\E-Shop-main\\frontend\\src\\reducers\\productReducers.js":"14","C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\screens\\HomeScreen.js":"15","C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\screens\\LoginScreen.js":"16","C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\screens\\EditUserScreen.js":"17","C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\screens\\ProductListScreen.js":"18","C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\Rating.js":"19","C:\\Users\\user\\E-Shop-main\\frontend\\src\\constants\\productConstants.js":"20","C:\\Users\\user\\E-Shop-main\\frontend\\src\\action\\orderAction.js":"21","C:\\Users\\user\\E-Shop-main\\frontend\\src\\reducers\\userReducers.js":"22","C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\Footer.js":"23","C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\screens\\ShippingScreen.js":"24","C:\\Users\\user\\E-Shop-main\\frontend\\src\\constants\\cartConstant.js":"25","C:\\Users\\user\\E-Shop-main\\frontend\\src\\constants\\userConstant.js":"26","C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\Message.js":"27","C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\Paginate.js":"28","C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\screens\\Product.js":"29","C:\\Users\\user\\E-Shop-main\\frontend\\src\\reportWebVitals.js":"30","C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\screens\\CartScreen.js":"31","C:\\Users\\user\\E-Shop-main\\frontend\\src\\reducers\\cartReducer.js":"32","C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\CheckoutSteps.js":"33"},{"size":654,"mtime":1615991136403,"results":"34","hashOfConfig":"35"},{"size":2636,"mtime":1615991136164,"results":"36","hashOfConfig":"35"},{"size":7604,"mtime":1615991139581,"results":"37","hashOfConfig":"35"},{"size":3185,"mtime":1615991139854,"results":"38","hashOfConfig":"35"},{"size":6040,"mtime":1617611588788,"results":"39","hashOfConfig":"35"},{"size":3003,"mtime":1615991140047,"results":"40","hashOfConfig":"35"},{"size":2819,"mtime":1615991138917,"results":"41","hashOfConfig":"35"},{"size":8120,"mtime":1615991139029,"results":"42","hashOfConfig":"35"},{"size":1404,"mtime":1616663436049,"results":"43","hashOfConfig":"35"},{"size":1206,"mtime":1615991140279,"results":"44","hashOfConfig":"35"},{"size":1321,"mtime":1615991136815,"results":"45","hashOfConfig":"35"},{"size":6548,"mtime":1616748006250,"results":"46","hashOfConfig":"35"},{"size":2246,"mtime":1615991136684,"results":"47","hashOfConfig":"35"},{"size":3823,"mtime":1615991140707,"results":"48","hashOfConfig":"35"},{"size":1416,"mtime":1615991138717,"results":"49","hashOfConfig":"35"},{"size":2221,"mtime":1615991138825,"results":"50","hashOfConfig":"35"},{"size":3141,"mtime":1615991138607,"results":"51","hashOfConfig":"35"},{"size":4636,"mtime":1615991139513,"results":"52","hashOfConfig":"35"},{"size":1467,"mtime":1615991138174,"results":"53","hashOfConfig":"35"},{"size":1524,"mtime":1615991140343,"results":"54","hashOfConfig":"35"},{"size":5144,"mtime":1616095887978,"results":"55","hashOfConfig":"35"},{"size":3723,"mtime":1615991140821,"results":"56","hashOfConfig":"35"},{"size":450,"mtime":1615991137351,"results":"57","hashOfConfig":"35"},{"size":2925,"mtime":1615991139961,"results":"58","hashOfConfig":"35"},{"size":236,"mtime":1615991140210,"results":"59","hashOfConfig":"35"},{"size":1454,"mtime":1615991140406,"results":"60","hashOfConfig":"35"},{"size":291,"mtime":1615991137996,"results":"61","hashOfConfig":"35"},{"size":652,"mtime":1615991138070,"results":"62","hashOfConfig":"35"},{"size":947,"mtime":1615991139311,"results":"63","hashOfConfig":"35"},{"size":362,"mtime":1615991136586,"results":"64","hashOfConfig":"35"},{"size":3621,"mtime":1615991138463,"results":"65","hashOfConfig":"35"},{"size":1316,"mtime":1615991140588,"results":"66","hashOfConfig":"35"},{"size":1446,"mtime":1615991137236,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"jbym75",{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"70"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"89"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\E-Shop-main\\frontend\\src\\index.js",[],["141","142"],"C:\\Users\\user\\E-Shop-main\\frontend\\src\\App.js",["143","144"],"import './App.css';\nimport {Container} from \"react-bootstrap\"\nimport Header from \"./component/Header\"\nimport Footer from \"./component/Footer\"\nimport Product from \"./component/screens/HomeScreen\"\nimport {Route,Switch} from \"react-router-dom\"\nimport HomeScreen from './component/screens/HomeScreen';\nimport ProductScreen from './component/screens/ProductScreen';\nimport CartScreen from './component/screens/CartScreen'\nimport LoginScreen from './component/screens/LoginScreen';\nimport RegisterScreen from './component/screens/RegisterScreen';\nimport ProfileScreen from './component/screens/ProfileScreen';\nimport ShippingScreen from './component/screens/ShippingScreen';\nimport PaymentScreen from './component/screens/PaymentScreen';\nimport PlaceOrderScreen from './component/screens/PlaceOrderScreen';\nimport OrderScreen from './component/screens/OrderScreen';\nimport UsersScreen from './component/screens/UsersScreen';\nimport ProductListScreen from './component/screens/ProductListScreen';\nimport EditUserScreen from './component/screens/EditUserScreen';\nimport ProductEditScreen from './component/screens/ProductEditScreen';\nimport OrderListScreen from './component/screens/OrderListScreen';\n\nconst App=()=>{\n  return (\n    <>\n     <Header/>\n     <main className=\"py-3\">\n     <Container>\n       <Route exact path=\"/\" component={HomeScreen} />\n       <Route exact path=\"/search/:keyword\" component={HomeScreen} />\n       <Route path=\"/search/:keyword/page/:pageNumber\" component={HomeScreen} />\n       <Route path=\"/page/:pageNumber\" component={HomeScreen} />\n       <Route path=\"/order/:id\" component={OrderScreen}/>\n       <Route path=\"/product/:id\" component={ProductScreen} />\n       <Route path=\"/login\" component={LoginScreen} />\n       <Route path=\"/register\" component={RegisterScreen} />\n       <Route path=\"/profile\" component={ProfileScreen} />\n       <Route path=\"/shipping\" component={ShippingScreen} />\n       <Route path=\"/payment\" component={PaymentScreen} />\n       <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n       <Route exact path=\"/admin/productlist\" component={ProductListScreen} />\n       <Route exact path=\"/admin/productlist/:pageNumber\" component={ProductListScreen} />\n       <Route path=\"/admin/userlist\" component={UsersScreen} />\n       <Route path=\"/admin/orderlist\" component={OrderListScreen} />\n       <Route path=\"/admin/user/:id/edit\" component={EditUserScreen} />\n       <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen} />\n       <Route path=\"/cart/:id?\" component={CartScreen} />\n     </Container>\n     </main>  \n     <Footer/>\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\screens\\ProductScreen.js",["145","146"],"import React, {useState, useEffect} from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport {Row, Col, Image, ListGroup, Card, Button, Form} from \"react-bootstrap\"\r\nimport Rating from \"../Rating\"\r\nimport Loader from \"../Loader\"\r\nimport Message from \"../Message\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport { ListGroupItem } from 'react-bootstrap'\r\nimport {listProductDetails, productReview} from \"../../action/productAction\"\r\nimport {PRODUCT_CREATE_RESET, PRODUCT_CREATE_REVIEW_RESET} from \"../../constants/productConstants\"\r\n\r\nconst ProductScreen = ({history, match}) => {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState(\"\")\r\n    \r\n    const dispatch = useDispatch()\r\n    const productDetails = useSelector(state=>state.productDetails)\r\n    const {loading, error, product} = productDetails\r\n\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const reviewProduct = useSelector(state=>state.reviewProduct)\r\n    const {loading:loadingReview, error:errorReview, success} = reviewProduct\r\n    \r\n    useEffect(() => {\r\n        if(success){\r\n            alert(\"Review Submitted\")\r\n            setRating(0)\r\n            setComment(\"\")\r\n            dispatch({type: PRODUCT_CREATE_REVIEW_RESET})\r\n        }\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, success, match])\r\n\r\n    const addToCartHandler = () =>{\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        dispatch(productReview(match.params.id, {\r\n            rating,\r\n            comment\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n         <Link className=\"btn btn-light my-3\" to=\"/\">Go Back</Link>\r\n         {loading ? <Loader/>: error ? <Message variants=\"danger\">{error}</Message> :(\r\n        <>\r\n         <Row>\r\n             <Col md={6}>\r\n                <Image src={product.image} alt={product.name} fluid />\r\n             </Col>\r\n             <Col md={3}>\r\n                <ListGroup variant=\"flush\">\r\n                    <ListGroupItem>\r\n                        <h2>{product.name}</h2>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        Price: ${product.price}\r\n                    </ListGroupItem>\r\n                    <ListGroupItem>\r\n                        Description: ${product.description}\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n             </Col>\r\n             <Col md={3}>\r\n                <Card>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroupItem>\r\n                            <Row>\r\n                                <Col>\r\n                                    Price:\r\n                                </Col>\r\n                                <Col>\r\n                                    <strong>${product.price}</strong>\r\n                                </Col>\r\n                            </Row>\r\n                            </ListGroupItem>\r\n                            <ListGroupItem>\r\n                            <Row>\r\n                                <Col>\r\n                                    Status:\r\n                                </Col>\r\n                                <Col>\r\n                                    {product.countInStock>0?\"In Stock\":\"Out of Stock\"}\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroupItem>\r\n                        \r\n                        {product.countInStock >0 &&(\r\n                            <ListGroupItem>\r\n                                <Row>\r\n                                    <Col>Qty</Col>\r\n                                    <Col>\r\n                                        <Form.Control as=\"select\" value={qty} onChange={(e)=>setQty(e.target.value)}>\r\n                                        {[...Array(product.countInStock).keys()].map(x=>(\r\n                                              <option key={x+1} value={x+1}> {x+1} </option>\r\n                                          ))}     \r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroupItem>\r\n                        )}\r\n\r\n                        <ListGroupItem>\r\n                            <Button onClick={addToCartHandler} className=\"btn-block\" type=\"button\" disabled={product.countInStock===0}>\r\n                                Add To Cart\r\n                            </Button>\r\n                        </ListGroupItem>\r\n                    </ListGroup>\r\n                </Card>\r\n             </Col>\r\n         </Row>\r\n\r\n         <Row>\r\n             <Col md={6}>\r\n                 <h2>Reviews</h2>\r\n                 {product.reviews.length ===0 && <Message>No Reviews</Message>}\r\n                 <ListGroup variant = \"flush\">\r\n                     {product.reviews.map(review =>(\r\n                         <ListGroup.Item key={review._id}>\r\n                             <strong>{review.name}</strong>\r\n                             <Rating value={review.rating} />\r\n                             <p>{review.createdAt.substring(0,10)}</p>\r\n                             <p>{review.comment}</p>\r\n                         </ListGroup.Item>\r\n                     ))}\r\n                     <ListGroup.Item>\r\n                         <h2>Write a Customer Review</h2>\r\n                         {errorReview && <Message varaint = \"danger\">{errorReview}</Message>}\r\n                         {userInfo ? (\r\n                             <Form onSubmit={submitHandler}>\r\n                                <Form.Group controlId=\"rating\">\r\n                                    <Form.Label>Rating</Form.Label>\r\n                                    <Form.Control as=\"select\" value={rating} onChange={(e)=>setRating(e.target.value)}>\r\n                                        <option value=\"\">Select...</option>\r\n                                        <option value=\"1\">1 - Poor</option>\r\n                                        <option value=\"2\">2 - Fair</option>\r\n                                        <option value=\"3\">3 - Good</option>\r\n                                        <option value=\"4\">4 - Very Good</option>\r\n                                        <option value=\"5\">5 - Excellent</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"comment\">\r\n                                    <Form.Label>Comment</Form.Label>\r\n                                    <Form.Control as=\"textarea\" row=\"3\" value={comment} onChange={(e)=>setComment(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Button type=\"submit\" varaint = \"primary\">Submit</Button>\r\n                             </Form>\r\n                         ):\r\n                         <Message>\r\n                             Please <Link to=\"/login\">Sign in</Link> to write a review {\" \"}\r\n                         </Message>}\r\n                     </ListGroup.Item>\r\n                 </ListGroup>\r\n             </Col>\r\n         </Row>\r\n         </>\r\n         )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\screens\\RegisterScreen.js",[],["147","148"],"C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\screens\\PlaceOrderScreen.js",["149","150","151","152"],"C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\screens\\UsersScreen.js",[],"C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\screens\\OrderListScreen.js",[],"C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\screens\\OrderScreen.js",["153"],"import React, { useState, useEffect } from 'react'\r\nimport Axios from \"axios\"\r\nimport { PayPalButton } from \"react-paypal-button-v2\"\r\nimport { Image, Row, Col, Button, ListGroup, Card, } from \"react-bootstrap\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Message from \"../Message\"\r\nimport Loader from \"../Loader\"\r\nimport {getOrderDetails, paidOrder, deliverOrder} from \"../../action/orderAction\"\r\nimport {ORDER_PAY_RESET, ORDER_DELIVER_RESET} from \"../../constants/orderConstant\"\r\n\r\nconst OrderScreen = ({match, history}) => {\r\n    const orderId = match.params.id\r\n    \r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const orderDetails = useSelector(state=>state.orderDetails)\r\n    const {order, error, loading} = orderDetails\r\n\r\n    const orderPaid = useSelector(state=>state.orderPaid)\r\n    const {success:successPay, loading:loadingPay} = orderPaid\r\n\r\n    const orderDelivered = useSelector(state=>state.orderDelivered)\r\n    const {success:successDeliver, loading:loadingDeliver} = orderDelivered\r\n    \r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    if(!loading){\r\n        const addDecimals = (num) =>{\r\n            return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n        order.itemsPrice = addDecimals(order.orderItems.reduce((acc,item)=> acc+item.price * item.qty, 0))\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if(!userInfo){\r\n            history.push(\"/login\")\r\n        }\r\n\r\n        const addPayPalScript = async()=>{\r\n            const {data: clientId} = await Axios.get(\"/api/config/paypal\")\r\n            const script = document.createElement(\"script\")\r\n            script.type = \"text/javascript\"\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () =>{\r\n                setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n        \r\n        if(!order || successPay || successDeliver){\r\n            dispatch({type: ORDER_PAY_RESET})\r\n            dispatch({type: ORDER_DELIVER_RESET})\r\n            dispatch(getOrderDetails(orderId))    \r\n        }else if(!order.isPaid){\r\n            if(!window.paypal){\r\n                addPayPalScript()\r\n            }else{\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n        \r\n    }, [dispatch, orderId, successPay, successDeliver, order])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(paidOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () =>{\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? <Loader/>: error ? <Message variant=\"danger\">{error}</Message>\r\n    :<>\r\n    <h1>Order {order._id}</h1>\r\n    <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p><strong>Name:</strong>{order.user.name}</p>\r\n                            <p><strong>Email:</strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                            <p>\r\n                                <strong>Address:</strong>\r\n                                {order.shippingAddress.address}, {order.shippingAddress.city},\r\n                                {order.shippingAddress.postalCode}, {order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ?( <Message variant=\"success\">Delivered on {order.paidAt}</Message>):(\r\n                            <Message variant=\"danger\">Not Delivered</Message>)}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                            <strong>Method:</strong>\r\n                            {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ?( <Message variant=\"success\">Paid on {order.paidAt}</Message>):(\r\n                            <Message variant=\"danger\">Not Paid</Message>)}\r\n                        </ListGroup.Item>\r\n                        \r\n                        <ListGroup.Item>\r\n                            <h2>Order Items:</h2>\r\n                            {order.orderItems.length===0 ? <Message >Your Order is Empty</Message>:(\r\n                                <ListGroup variant =\"flush\">\r\n                                    {order.orderItems.map((item,index)=>(\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty *item.price}\r\n                                                </Col>\r\n                                            </Row> \r\n                                        </ListGroup.Item>\r\n                            ))}\r\n                                </ListGroup>\r\n                        )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col> \r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Order Summary</h2>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>Items</Col>\r\n                            <Col>${order.itemsPrice}</Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>Shipping</Col>\r\n                            <Col>${order.shippingPrice}</Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>Tax</Col>\r\n                            <Col>${order.taxPrice}</Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>Total</Col>\r\n                            <Col>${order.totalPrice}</Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    {!order.isPaid && (\r\n                        <ListGroup.Item>\r\n                            {loadingPay && <Loader />}\r\n                            {!sdkReady ? <Loader /> : (\r\n                                <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler}/>\r\n                            )}\r\n                        </ListGroup.Item>    \r\n                    )}\r\n                    {loadingDeliver && <Loader/>}\r\n                    {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                        <ListGroup.Item>\r\n                            <Button type=\"button\" className=\"btn btn-block\" onClick={deliverHandler}>\r\n                                Mark As Delivered\r\n                            </Button> \r\n                        </ListGroup.Item>\r\n                    )}\r\n                  \r\n                    </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n    </>\r\n}\r\n\r\nexport default OrderScreen\r\n",["154","155"],"C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\screens\\Caurosel.js",[],"C:\\Users\\user\\E-Shop-main\\frontend\\src\\constants\\orderConstant.js",[],"C:\\Users\\user\\E-Shop-main\\frontend\\src\\action\\cartAction.js",[],"C:\\Users\\user\\E-Shop-main\\frontend\\src\\action\\userAction.js",[],"C:\\Users\\user\\E-Shop-main\\frontend\\src\\store.js",[],"C:\\Users\\user\\E-Shop-main\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\screens\\HomeScreen.js",[],"C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\screens\\LoginScreen.js",[],"C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\screens\\EditUserScreen.js",["156"],"import React, {useState,useEffect} from 'react'\r\nimport {Form, Button} from \"react-bootstrap\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport Message from \"../Message\"\r\nimport Loader from \"../Loader\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {getUserDetails, UserUpdate} from \"../../action/userAction\"\r\nimport FormContainer from \"../FormContainer\"\r\nimport {USER_UPDATE_RESET} from \"../../constants/userConstant\"\r\n\r\nconst EditUserScreen = ({match, history}) => {\r\n    const userId = match.params.id\r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const userDetails = useSelector(state=>state.userDetails)\r\n    const {loading, error, user} = userDetails\r\n    \r\n    const UpdateUser = useSelector(state=>state.UpdateUser)\r\n    const {loading:loadingUpdate, error:errorUpdate, success} = UpdateUser\r\n\r\n    useEffect(() => {\r\n        if(success){\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push(\"/admin/userlist\")\r\n        }else{\r\n            if(!user.name || user._id !==userId){\r\n                dispatch(getUserDetails(userId))\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n        \r\n    }, [dispatch, userId, user,history])\r\n\r\n    const submitHandler =(e)=>{\r\n        e.preventDefault()\r\n        dispatch(UserUpdate({_id:userId, name, email, isAdmin}))\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\r\n            Go Back\r\n        </Link>\r\n        \r\n        <FormContainer>\r\n            <h1>Edit User</h1>\r\n            {loadingUpdate && <Loader/> }\r\n            {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n            {loading ? <Loader/> : error ? <Message variant=\"danger\">{error}</Message>: (\r\n                <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId=\"name\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type=\"name\" placeholder=\"Enter Name\" value={name} onChange={(e)=>setName(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Enter Email\" value={email} onChange={(e)=>setEmail(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"isadmin\">\r\n                <Form.Check\r\n                type='checkbox'\r\n                label='Is Admin'\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n                </Form.Group>\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                    Update\r\n                </Button>\r\n                </Form>\r\n            )}\r\n            </FormContainer>\r\n\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default EditUserScreen\r\n","C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\screens\\ProductListScreen.js",[],"C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\Rating.js",[],"C:\\Users\\user\\E-Shop-main\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\user\\E-Shop-main\\frontend\\src\\action\\orderAction.js",["157"],"C:\\Users\\user\\E-Shop-main\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\Footer.js",[],"C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\screens\\ShippingScreen.js",[],"C:\\Users\\user\\E-Shop-main\\frontend\\src\\constants\\cartConstant.js",[],"C:\\Users\\user\\E-Shop-main\\frontend\\src\\constants\\userConstant.js",[],"C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\Message.js",[],"C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\Paginate.js",[],"C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\screens\\Product.js",[],"C:\\Users\\user\\E-Shop-main\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\screens\\CartScreen.js",[],"C:\\Users\\user\\E-Shop-main\\frontend\\src\\reducers\\cartReducer.js",[],"C:\\Users\\user\\E-Shop-main\\frontend\\src\\component\\CheckoutSteps.js",[],{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":5,"column":8,"nodeType":"164","messageId":"165","endLine":5,"endColumn":15},{"ruleId":"162","severity":1,"message":"166","line":6,"column":15,"nodeType":"164","messageId":"165","endLine":6,"endColumn":21},{"ruleId":"162","severity":1,"message":"167","line":10,"column":9,"nodeType":"164","messageId":"165","endLine":10,"endColumn":29},{"ruleId":"162","severity":1,"message":"168","line":25,"column":20,"nodeType":"164","messageId":"165","endLine":25,"endColumn":33},{"ruleId":"158","replacedBy":"169"},{"ruleId":"160","replacedBy":"170"},{"ruleId":"162","severity":1,"message":"171","line":1,"column":17,"nodeType":"164","messageId":"165","endLine":1,"endColumn":25},{"ruleId":"162","severity":1,"message":"172","line":7,"column":9,"nodeType":"164","messageId":"165","endLine":7,"endColumn":20},{"ruleId":"162","severity":1,"message":"173","line":10,"column":11,"nodeType":"164","messageId":"165","endLine":10,"endColumn":19},{"ruleId":"174","severity":1,"message":"175","line":33,"column":54,"nodeType":"176","messageId":"177","endLine":33,"endColumn":55},{"ruleId":"178","severity":1,"message":"179","line":67,"column":8,"nodeType":"180","endLine":67,"endColumn":62,"suggestions":"181"},{"ruleId":"158","replacedBy":"182"},{"ruleId":"160","replacedBy":"183"},{"ruleId":"178","severity":1,"message":"184","line":39,"column":8,"nodeType":"180","endLine":39,"endColumn":40,"suggestions":"185"},{"ruleId":"162","severity":1,"message":"186","line":2,"column":192,"nodeType":"164","messageId":"165","endLine":2,"endColumn":207},"no-native-reassign",["187"],"no-negated-in-lhs",["188"],"no-unused-vars","'Product' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'PRODUCT_CREATE_RESET' is defined but never used.","'loadingReview' is assigned a value but never used.",["187"],["188"],"'useState' is defined but never used.","'createOrder' is defined but never used.","'dispatch' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.","ArrayExpression",["189"],["187"],["188"],"React Hook useEffect has a missing dependency: 'success'. Either include it or remove the dependency array.",["190"],"'ORDER_PAY_RESET' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},"Update the dependencies array to be: [dispatch, orderId, successPay, successDeliver, order, userInfo, history]",{"range":"195","text":"196"},"Update the dependencies array to be: [dispatch, userId, user, history, success]",{"range":"197","text":"198"},[2458,2512],"[dispatch, orderId, successPay, successDeliver, order, userInfo, history]",[1392,1424],"[dispatch, userId, user, history, success]"]